package sk.tuke.magsa.maketool.task;

import sk.tuke.magsa.maketool.PrintProvider;
import sk.tuke.magsa.maketool.State;
import sk.tuke.magsa.maketool.action.DaoImplementationGenerator;
import sk.tuke.magsa.maketool.action.DaoInterfaceGenerator;
import sk.tuke.magsa.maketool.action.DatabaseScriptGenerator;
import sk.tuke.magsa.maketool.action.EntityClassGenerator;
import sk.tuke.magsa.maketool.action.LineParser;
import sk.tuke.magsa.maketool.action.MagsaContext;
import sk.tuke.magsa.maketool.ui.ActionWrapper;

public class Task2 extends AbstractTaskPanel {
    public Task2() {
        initComponents();
    }

    @Override
    public void configure(PrintProvider printProvider) {
        MagsaContext context = new MagsaContext();

        lineParser.addInputs(modelDir);
        lineParser.setOutput(model);
        lineParser.setAction(new ActionWrapper(new LineParser(), context, printProvider));

        databaseScriptGenerator.addInputs(model);
        databaseScriptGenerator.setOutput(databaseScript);
        databaseScriptGenerator.setAction(new ActionWrapper(new DatabaseScriptGenerator(), context, printProvider));

        entityClassGenerator.addInputs(model);
        entityClassGenerator.setOutput(entityClass);
        entityClassGenerator.setAction(new ActionWrapper(new EntityClassGenerator(), context, printProvider));

        daoInterfaceGenerator.addInputs(model);
        daoInterfaceGenerator.setOutput(daoInterface);
        daoInterfaceGenerator.setAction(new ActionWrapper(new DaoInterfaceGenerator(), context, printProvider));

        daoImplementationGenerator.addInputs(model);
        daoImplementationGenerator.setOutput(daoImplementation);
        daoImplementationGenerator.setAction(new ActionWrapper(new DaoImplementationGenerator(), context, printProvider));
    }

    @Override
    public void init() {
        modelDir.setState(State.COMPLETED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        databaseScript = new sk.tuke.magsa.maketool.component.ResourceComponent();
        modelDir = new sk.tuke.magsa.maketool.component.ResourceComponent();
        databaseScriptGenerator = new sk.tuke.magsa.maketool.component.ExecutableResourceComponent();
        model = new sk.tuke.magsa.maketool.component.ResourceComponent();
        entityClassGenerator = new sk.tuke.magsa.maketool.component.ExecutableResourceComponent();
        entityClass = new sk.tuke.magsa.maketool.component.ResourceComponent();
        daoInterfaceGenerator = new sk.tuke.magsa.maketool.component.ExecutableResourceComponent();
        daoInterface = new sk.tuke.magsa.maketool.component.ResourceComponent();
        daoImplementationGenerator = new sk.tuke.magsa.maketool.component.ExecutableResourceComponent();
        daoImplementation = new sk.tuke.magsa.maketool.component.ResourceComponent();
        arrow5 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow6 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow7 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow8 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow12 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow13 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow16 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow19 = new sk.tuke.magsa.maketool.component.Arrow();
        arrow20 = new sk.tuke.magsa.maketool.component.Arrow();
        lineParser = new sk.tuke.magsa.maketool.component.ExecutableResourceComponent();
        arrow4 = new sk.tuke.magsa.maketool.component.Arrow();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        databaseScript.setLabel("Vygenerovaný kód:<br>databázový skript");
        add(databaseScript, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 170, 120, 50));

        modelDir.setLabel("Zápis v jazyku entít<br>(adresár model)");
        add(modelDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 105, 55));

        databaseScriptGenerator.setActionName("Generate");
        databaseScriptGenerator.setLabel("DbScriptGenerator");
        add(databaseScriptGenerator, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 110, 50));

        model.setLabel("Model");
        add(model, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 70, 60));

        entityClassGenerator.setActionName("Generate");
        entityClassGenerator.setLabel("Generátor tried entít");
        add(entityClassGenerator, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 240, 110, 50));

        entityClass.setLabel("Vygenerovaný kód:<br>triedy entít");
        add(entityClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 240, 120, 50));

        daoInterfaceGenerator.setActionName("Generate");
        daoInterfaceGenerator.setLabel("Generátor DAO<br> rozhraní");
        add(daoInterfaceGenerator, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 310, 110, 60));

        daoInterface.setLabel("Vygenerovaný kód:<br>DAO rozhrania");
        add(daoInterface, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 310, 120, 50));

        daoImplementationGenerator.setActionName("Generate");
        daoImplementationGenerator.setLabel("Generátor DAO");
        add(daoImplementationGenerator, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, 110, 50));

        daoImplementation.setLabel("Vygenerovaný kód:<br>DAO");
        add(daoImplementation, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 380, 120, 50));
        add(arrow5, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 180, 30, 30));
        add(arrow6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 30, 30));
        add(arrow7, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, 30, 30));
        add(arrow8, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 390, 30, 30));

        arrow12.setBarbStyle(sk.tuke.magsa.maketool.component.Arrow.BarbStyle.FILLED);
        arrow12.setOrientation(sk.tuke.magsa.maketool.component.Arrow.Orientation.NORTHEAST);
        add(arrow12, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 60, 70));
        add(arrow13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 50, 20));

        arrow16.setBarbStyle(sk.tuke.magsa.maketool.component.Arrow.BarbStyle.FILLED);
        arrow16.setOrientation(sk.tuke.magsa.maketool.component.Arrow.Orientation.NORTHEAST);
        add(arrow16, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 280, 60, 20));

        arrow19.setBarbStyle(sk.tuke.magsa.maketool.component.Arrow.BarbStyle.FILLED);
        arrow19.setOrientation(sk.tuke.magsa.maketool.component.Arrow.Orientation.SOUTHEAST);
        add(arrow19, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 310, 60, 20));

        arrow20.setBarbStyle(sk.tuke.magsa.maketool.component.Arrow.BarbStyle.FILLED);
        arrow20.setOrientation(sk.tuke.magsa.maketool.component.Arrow.Orientation.SOUTHEAST);
        add(arrow20, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 60, 80));

        lineParser.setActionName("Parse");
        lineParser.setLabel("LineParser");
        add(lineParser, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 100, 60));

        arrow4.setBarbStyle(sk.tuke.magsa.maketool.component.Arrow.BarbStyle.FILLED);
        add(arrow4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 50, 20));

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fáza generovania");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setOpaque(true);
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 560, 530));

        jLabel3.setBackground(new java.awt.Color(241, 182, 139));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Fáza rozpoznávania");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel3.setOpaque(true);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 530));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private sk.tuke.magsa.maketool.component.Arrow arrow12;
    private sk.tuke.magsa.maketool.component.Arrow arrow13;
    private sk.tuke.magsa.maketool.component.Arrow arrow16;
    private sk.tuke.magsa.maketool.component.Arrow arrow19;
    private sk.tuke.magsa.maketool.component.Arrow arrow20;
    private sk.tuke.magsa.maketool.component.Arrow arrow4;
    private sk.tuke.magsa.maketool.component.Arrow arrow5;
    private sk.tuke.magsa.maketool.component.Arrow arrow6;
    private sk.tuke.magsa.maketool.component.Arrow arrow7;
    private sk.tuke.magsa.maketool.component.Arrow arrow8;
    private sk.tuke.magsa.maketool.component.ResourceComponent daoImplementation;
    private sk.tuke.magsa.maketool.component.ExecutableResourceComponent daoImplementationGenerator;
    private sk.tuke.magsa.maketool.component.ResourceComponent daoInterface;
    private sk.tuke.magsa.maketool.component.ExecutableResourceComponent daoInterfaceGenerator;
    private sk.tuke.magsa.maketool.component.ResourceComponent databaseScript;
    private sk.tuke.magsa.maketool.component.ExecutableResourceComponent databaseScriptGenerator;
    private sk.tuke.magsa.maketool.component.ResourceComponent entityClass;
    private sk.tuke.magsa.maketool.component.ExecutableResourceComponent entityClassGenerator;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private sk.tuke.magsa.maketool.component.ExecutableResourceComponent lineParser;
    private sk.tuke.magsa.maketool.component.ResourceComponent model;
    private sk.tuke.magsa.maketool.component.ResourceComponent modelDir;
    // End of variables declaration//GEN-END:variables

}
